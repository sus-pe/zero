name: Release
on:
  workflow_run:
    workflows: ["Build Matrix"]
    types:
      - completed
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - uses: actions/github-script@v7
        id: meta
        with:
          script: |
            const { execSync } = require('child_process');
            const uvVersion = execSync('uv version --short', { encoding: 'utf8' }).trim();
            const version = `v${uvVersion}`;
            const commit = process.env.GITHUB_SHA;
            const eventName = process.env.GITHUB_EVENT_NAME;
            const runNumber = process.env.GITHUB_RUN_NUMBER;
            const prNumber = (context.payload.pull_request && context.payload.pull_request.number) || '';

            let release_id, draft;
            if (eventName === 'pull_request') {
              release_id = `${version}.dev${prNumber}-${runNumber}.${commit}`;
              draft = true;
            } else {
              release_id = `${version}.${commit}`;
              draft = false;
            }

            core.setOutput('release_id', release_id);
            core.setOutput('is_draft', String(draft));
            core.setOutput('is_prerelease', 'true');
      - uses: actions/download-artifact@v4
        with:
          path: release_artifacts
      - run: ls -R release_artifacts
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.release_id }}
          name: ${{ steps.meta.outputs.release_id }}
          draft: ${{ steps.meta.outputs.is_draft }}
          prerelease: ${{ steps.meta.outputs.is_prerelease }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            release_artifacts/*-dist/*
